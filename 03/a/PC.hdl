// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:

    // Deferred selectors (T-1)
    DFF(in=load, out=dLoad);
    DFF(in=inc, out=dInc);
    DFF(in=reset, out=dReset);

    // Default output 
    Register(in=in, load=load, out=outDefault);

    //Feed out to Inc16, using a register to prevent combinatorial circular error.
    Register(in=outLoop, load=true, out=outLoopInc);
    Inc16(in=outLoopInc, out=outInc);

    // If else in reverse sequential order when using Mux.
    Mux16(a=outIncLoad, b=false, sel=dReset, out=outLoop, out=out);
    Mux16(a=outIncD, b=outDefault, sel=dLoad, out=outIncLoad);
    Mux16(a=outDefault, b=outInc, sel=dInc, out=outIncD);
}
